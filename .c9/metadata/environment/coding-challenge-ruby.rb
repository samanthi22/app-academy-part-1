{"filter":false,"title":"coding-challenge-ruby.rb","tooltip":"/coding-challenge-ruby.rb","undoManager":{"mark":9,"position":9,"stack":[[{"start":{"row":0,"column":0},"end":{"row":20,"column":0},"action":"insert","lines":["# Write a function that acts like \"index\", in that it","# returns the position of a given string within a","# larger string, and returns -1 if the given string","# is not found.","","# Two strings are given as arguments. The first","# argument is the smaller string, and the second argument","# is the larger string.","","# DO NOT use any stdlib string search functions like","# index, find, etc.","","# Examples:","","#  str_index_of(\"Francisco\", \"San Francisco\")","#  => 4","#  str_index_of(\"abba\", \"bbbabbaaa\")","#  => 3","#  str_index_of(\"Jose\", \"San Francisco\")","#  => -1",""],"id":1}],[{"start":{"row":20,"column":0},"end":{"row":39,"column":19},"action":"insert","lines":["","# @param {String} needle","# @param {String} haystack","# @return integer","","def str_index_of(needle, haystack)","  # STUB.","  -1","end","","","# Write a function that capitalizes all of the words in","# a sentence.","","# DO NOT use the stdlib capitalize method","","# Examples:","","#  capitalize(\"Hello world\")","#  => \"Hello World\""],"id":2}],[{"start":{"row":39,"column":19},"end":{"row":40,"column":0},"action":"insert","lines":["",""],"id":3}],[{"start":{"row":40,"column":0},"end":{"row":58,"column":32},"action":"insert","lines":["","#  capitalize(\"1st thing\")","#  => \"1st Thing\"","","#  capitalize(\"javaScript language\")","#  => \"JavaScript Language\"","","# @param  {String} sentence","# @return {String}","","def capitalize(sentence)","  # STUB.","  sentence","end","","","# Write a function that takes in a sentence as an argument.","# The sentence always contains one comma, which divides","# the sentence into two strings."],"id":4}],[{"start":{"row":58,"column":32},"end":{"row":59,"column":0},"action":"insert","lines":["",""],"id":5}],[{"start":{"row":59,"column":0},"end":{"row":73,"column":27},"action":"insert","lines":["# DO NOT use a the stdlib end_with? method","","# The function should return true if the first part of the string","# (the part before the comma) ends with second part of","# the string (the part after the comma).","","# Examples:","","#  ends_with(\"San Francisco,Francisco\");","#  => true","#  ends_with(\"racecar,race\");","#  => false","#  ends_with(\"honey,money\");","#  => false","#  ends_with(\"escargo,go\");"],"id":6}],[{"start":{"row":73,"column":27},"end":{"row":74,"column":0},"action":"insert","lines":["",""],"id":7}],[{"start":{"row":74,"column":0},"end":{"row":86,"column":3},"action":"insert","lines":["#  => true","#  ends_with(\"Palo Alto,Palo\");","#  => false","#  ends_with(\"Raise.me,me\");","#  => true","","# @param  {String} sentence","# @return {Bool} true or false","","def ends_with(sentence)","  # STUB","  false","end"],"id":8}],[{"start":{"row":86,"column":3},"end":{"row":87,"column":0},"action":"insert","lines":["",""],"id":9}],[{"start":{"row":87,"column":0},"end":{"row":92,"column":42},"action":"insert","lines":["","# Tests","puts str_index_of(\"Francisco\", \"San Francisco\")","puts capitalize(\"python is named after monty python, not the snake.\")","puts ends_with(\"San Francisco, Francisco\")","puts ends_with(\"San Francisco, Francesco\")"],"id":10}]]},"ace":{"folds":[],"scrolltop":1296,"scrollleft":0,"selection":{"start":{"row":86,"column":3},"end":{"row":86,"column":3},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":80,"state":"start","mode":"ace/mode/ruby"}},"timestamp":1547052629721,"hash":"6bd5f03891b94c998e24dcee818e850858639b28"}